<?php
/**
 * UpdateFulfillmentOrderRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  SellingPartnerApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.36
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace SellingPartnerApi\Model\FulfillmentOutbound20200701;

use \ArrayAccess;
use \SellingPartnerApi\ObjectSerializer;

/**
 * UpdateFulfillmentOrderRequest Class Doc Comment
 *
 * @category Class
 * @description The request body schema for the updateFulfillmentOrder operation.
 * @package  SellingPartnerApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UpdateFulfillmentOrderRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'UpdateFulfillmentOrderRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'marketplaceId' => 'string',
'displayableOrderId' => 'string',
'displayableOrderDate' => '\SellingPartnerApi\Model\FulfillmentOutbound20200701\Timestamp',
'displayableOrderComment' => 'string',
'shippingSpeedCategory' => '\SellingPartnerApi\Model\FulfillmentOutbound20200701\ShippingSpeedCategory',
'destinationAddress' => '\SellingPartnerApi\Model\FulfillmentOutbound20200701\Address',
'fulfillmentAction' => '\SellingPartnerApi\Model\FulfillmentOutbound20200701\FulfillmentAction',
'fulfillmentPolicy' => '\SellingPartnerApi\Model\FulfillmentOutbound20200701\FulfillmentPolicy',
'shipFromCountryCode' => 'string',
'notificationEmails' => '\SellingPartnerApi\Model\FulfillmentOutbound20200701\NotificationEmailList',
'featureConstraints' => '\SellingPartnerApi\Model\FulfillmentOutbound20200701\FeatureSettings[]',
'items' => '\SellingPartnerApi\Model\FulfillmentOutbound20200701\UpdateFulfillmentOrderItemList'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'marketplaceId' => null,
'displayableOrderId' => null,
'displayableOrderDate' => null,
'displayableOrderComment' => null,
'shippingSpeedCategory' => null,
'destinationAddress' => null,
'fulfillmentAction' => null,
'fulfillmentPolicy' => null,
'shipFromCountryCode' => null,
'notificationEmails' => null,
'featureConstraints' => null,
'items' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'marketplaceId' => 'marketplaceId',
'displayableOrderId' => 'displayableOrderId',
'displayableOrderDate' => 'displayableOrderDate',
'displayableOrderComment' => 'displayableOrderComment',
'shippingSpeedCategory' => 'shippingSpeedCategory',
'destinationAddress' => 'destinationAddress',
'fulfillmentAction' => 'fulfillmentAction',
'fulfillmentPolicy' => 'fulfillmentPolicy',
'shipFromCountryCode' => 'shipFromCountryCode',
'notificationEmails' => 'notificationEmails',
'featureConstraints' => 'featureConstraints',
'items' => 'items'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'marketplaceId' => 'setMarketplaceId',
'displayableOrderId' => 'setDisplayableOrderId',
'displayableOrderDate' => 'setDisplayableOrderDate',
'displayableOrderComment' => 'setDisplayableOrderComment',
'shippingSpeedCategory' => 'setShippingSpeedCategory',
'destinationAddress' => 'setDestinationAddress',
'fulfillmentAction' => 'setFulfillmentAction',
'fulfillmentPolicy' => 'setFulfillmentPolicy',
'shipFromCountryCode' => 'setShipFromCountryCode',
'notificationEmails' => 'setNotificationEmails',
'featureConstraints' => 'setFeatureConstraints',
'items' => 'setItems'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'marketplaceId' => 'getMarketplaceId',
'displayableOrderId' => 'getDisplayableOrderId',
'displayableOrderDate' => 'getDisplayableOrderDate',
'displayableOrderComment' => 'getDisplayableOrderComment',
'shippingSpeedCategory' => 'getShippingSpeedCategory',
'destinationAddress' => 'getDestinationAddress',
'fulfillmentAction' => 'getFulfillmentAction',
'fulfillmentPolicy' => 'getFulfillmentPolicy',
'shipFromCountryCode' => 'getShipFromCountryCode',
'notificationEmails' => 'getNotificationEmails',
'featureConstraints' => 'getFeatureConstraints',
'items' => 'getItems'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['marketplaceId'] = isset($data['marketplaceId']) ? $data['marketplaceId'] : null;
        $this->container['displayableOrderId'] = isset($data['displayableOrderId']) ? $data['displayableOrderId'] : null;
        $this->container['displayableOrderDate'] = isset($data['displayableOrderDate']) ? $data['displayableOrderDate'] : null;
        $this->container['displayableOrderComment'] = isset($data['displayableOrderComment']) ? $data['displayableOrderComment'] : null;
        $this->container['shippingSpeedCategory'] = isset($data['shippingSpeedCategory']) ? $data['shippingSpeedCategory'] : null;
        $this->container['destinationAddress'] = isset($data['destinationAddress']) ? $data['destinationAddress'] : null;
        $this->container['fulfillmentAction'] = isset($data['fulfillmentAction']) ? $data['fulfillmentAction'] : null;
        $this->container['fulfillmentPolicy'] = isset($data['fulfillmentPolicy']) ? $data['fulfillmentPolicy'] : null;
        $this->container['shipFromCountryCode'] = isset($data['shipFromCountryCode']) ? $data['shipFromCountryCode'] : null;
        $this->container['notificationEmails'] = isset($data['notificationEmails']) ? $data['notificationEmails'] : null;
        $this->container['featureConstraints'] = isset($data['featureConstraints']) ? $data['featureConstraints'] : null;
        $this->container['items'] = isset($data['items']) ? $data['items'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets marketplaceId
     *
     * @return string
     */
    public function getMarketplaceId()
    {
        return $this->container['marketplaceId'];
    }

    /**
     * Sets marketplaceId
     *
     * @param string $marketplaceId The marketplace the fulfillment order is placed against.
     *
     * @return $this
     */
    public function setMarketplaceId($marketplaceId)
    {
        $this->container['marketplaceId'] = $marketplaceId;

        return $this;
    }

    /**
     * Gets displayableOrderId
     *
     * @return string
     */
    public function getDisplayableOrderId()
    {
        return $this->container['displayableOrderId'];
    }

    /**
     * Sets displayableOrderId
     *
     * @param string $displayableOrderId A fulfillment order identifier that the seller creates. This value displays as the order identifier in recipient-facing materials such as the outbound shipment packing slip. The value of DisplayableOrderId should match the order identifier that the seller provides to the recipient. The seller can use the SellerFulfillmentOrderId for this value or they can specify an alternate value if they want the recipient to reference an alternate order identifier.
     *
     * @return $this
     */
    public function setDisplayableOrderId($displayableOrderId)
    {
        $this->container['displayableOrderId'] = $displayableOrderId;

        return $this;
    }

    /**
     * Gets displayableOrderDate
     *
     * @return \SellingPartnerApi\Model\FulfillmentOutbound20200701\Timestamp
     */
    public function getDisplayableOrderDate()
    {
        return $this->container['displayableOrderDate'];
    }

    /**
     * Sets displayableOrderDate
     *
     * @param \SellingPartnerApi\Model\FulfillmentOutbound20200701\Timestamp $displayableOrderDate displayableOrderDate
     *
     * @return $this
     */
    public function setDisplayableOrderDate($displayableOrderDate)
    {
        $this->container['displayableOrderDate'] = $displayableOrderDate;

        return $this;
    }

    /**
     * Gets displayableOrderComment
     *
     * @return string
     */
    public function getDisplayableOrderComment()
    {
        return $this->container['displayableOrderComment'];
    }

    /**
     * Sets displayableOrderComment
     *
     * @param string $displayableOrderComment Order-specific text that appears in recipient-facing materials such as the outbound shipment packing slip.
     *
     * @return $this
     */
    public function setDisplayableOrderComment($displayableOrderComment)
    {
        $this->container['displayableOrderComment'] = $displayableOrderComment;

        return $this;
    }

    /**
     * Gets shippingSpeedCategory
     *
     * @return \SellingPartnerApi\Model\FulfillmentOutbound20200701\ShippingSpeedCategory
     */
    public function getShippingSpeedCategory()
    {
        return $this->container['shippingSpeedCategory'];
    }

    /**
     * Sets shippingSpeedCategory
     *
     * @param \SellingPartnerApi\Model\FulfillmentOutbound20200701\ShippingSpeedCategory $shippingSpeedCategory shippingSpeedCategory
     *
     * @return $this
     */
    public function setShippingSpeedCategory($shippingSpeedCategory)
    {
        $this->container['shippingSpeedCategory'] = $shippingSpeedCategory;

        return $this;
    }

    /**
     * Gets destinationAddress
     *
     * @return \SellingPartnerApi\Model\FulfillmentOutbound20200701\Address
     */
    public function getDestinationAddress()
    {
        return $this->container['destinationAddress'];
    }

    /**
     * Sets destinationAddress
     *
     * @param \SellingPartnerApi\Model\FulfillmentOutbound20200701\Address $destinationAddress destinationAddress
     *
     * @return $this
     */
    public function setDestinationAddress($destinationAddress)
    {
        $this->container['destinationAddress'] = $destinationAddress;

        return $this;
    }

    /**
     * Gets fulfillmentAction
     *
     * @return \SellingPartnerApi\Model\FulfillmentOutbound20200701\FulfillmentAction
     */
    public function getFulfillmentAction()
    {
        return $this->container['fulfillmentAction'];
    }

    /**
     * Sets fulfillmentAction
     *
     * @param \SellingPartnerApi\Model\FulfillmentOutbound20200701\FulfillmentAction $fulfillmentAction fulfillmentAction
     *
     * @return $this
     */
    public function setFulfillmentAction($fulfillmentAction)
    {
        $this->container['fulfillmentAction'] = $fulfillmentAction;

        return $this;
    }

    /**
     * Gets fulfillmentPolicy
     *
     * @return \SellingPartnerApi\Model\FulfillmentOutbound20200701\FulfillmentPolicy
     */
    public function getFulfillmentPolicy()
    {
        return $this->container['fulfillmentPolicy'];
    }

    /**
     * Sets fulfillmentPolicy
     *
     * @param \SellingPartnerApi\Model\FulfillmentOutbound20200701\FulfillmentPolicy $fulfillmentPolicy fulfillmentPolicy
     *
     * @return $this
     */
    public function setFulfillmentPolicy($fulfillmentPolicy)
    {
        $this->container['fulfillmentPolicy'] = $fulfillmentPolicy;

        return $this;
    }

    /**
     * Gets shipFromCountryCode
     *
     * @return string
     */
    public function getShipFromCountryCode()
    {
        return $this->container['shipFromCountryCode'];
    }

    /**
     * Sets shipFromCountryCode
     *
     * @param string $shipFromCountryCode The two-character country code for the country from which the fulfillment order ships. Must be in ISO 3166-1 alpha-2 format.
     *
     * @return $this
     */
    public function setShipFromCountryCode($shipFromCountryCode)
    {
        $this->container['shipFromCountryCode'] = $shipFromCountryCode;

        return $this;
    }

    /**
     * Gets notificationEmails
     *
     * @return \SellingPartnerApi\Model\FulfillmentOutbound20200701\NotificationEmailList
     */
    public function getNotificationEmails()
    {
        return $this->container['notificationEmails'];
    }

    /**
     * Sets notificationEmails
     *
     * @param \SellingPartnerApi\Model\FulfillmentOutbound20200701\NotificationEmailList $notificationEmails notificationEmails
     *
     * @return $this
     */
    public function setNotificationEmails($notificationEmails)
    {
        $this->container['notificationEmails'] = $notificationEmails;

        return $this;
    }

    /**
     * Gets featureConstraints
     *
     * @return \SellingPartnerApi\Model\FulfillmentOutbound20200701\FeatureSettings[]
     */
    public function getFeatureConstraints()
    {
        return $this->container['featureConstraints'];
    }

    /**
     * Sets featureConstraints
     *
     * @param \SellingPartnerApi\Model\FulfillmentOutbound20200701\FeatureSettings[] $featureConstraints A list of features and their fulfillment policies to apply to the order.
     *
     * @return $this
     */
    public function setFeatureConstraints($featureConstraints)
    {
        $this->container['featureConstraints'] = $featureConstraints;

        return $this;
    }

    /**
     * Gets items
     *
     * @return \SellingPartnerApi\Model\FulfillmentOutbound20200701\UpdateFulfillmentOrderItemList
     */
    public function getItems()
    {
        return $this->container['items'];
    }

    /**
     * Sets items
     *
     * @param \SellingPartnerApi\Model\FulfillmentOutbound20200701\UpdateFulfillmentOrderItemList $items items
     *
     * @return $this
     */
    public function setItems($items)
    {
        $this->container['items'] = $items;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange] 
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange] 
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
