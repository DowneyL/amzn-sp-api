<?php
/**
 * ShipmentDetail
 *
 * PHP version 5
 *
 * @category Class
 * @package  SellingPartnerApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Selling Partner API for Shipment Invoicing
 *
 * The Selling Partner API for Shipment Invoicing helps you programmatically retrieve shipment invoice information in the Brazil marketplace for a selling partnerâ€™s Fulfillment by Amazon (FBA) orders.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.36
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace SellingPartnerApi\Model\ShipmentInvoicingV0;

use \ArrayAccess;
use \SellingPartnerApi\ObjectSerializer;

/**
 * ShipmentDetail Class Doc Comment
 *
 * @category Class
 * @description The information required by a selling partner to issue a shipment invoice.
 * @package  SellingPartnerApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ShipmentDetail implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ShipmentDetail';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'warehouseId' => 'string',
'amazonOrderId' => 'string',
'amazonShipmentId' => 'string',
'purchaseDate' => '\DateTime',
'shippingAddress' => '\SellingPartnerApi\Model\ShipmentInvoicingV0\Address',
'paymentMethodDetails' => '\SellingPartnerApi\Model\ShipmentInvoicingV0\PaymentMethodDetailItemList',
'marketplaceId' => 'string',
'sellerId' => 'string',
'buyerName' => 'string',
'buyerCounty' => 'string',
'buyerTaxInfo' => '\SellingPartnerApi\Model\ShipmentInvoicingV0\BuyerTaxInfo',
'marketplaceTaxInfo' => '\SellingPartnerApi\Model\ShipmentInvoicingV0\MarketplaceTaxInfo',
'sellerDisplayName' => 'string',
'shipmentItems' => '\SellingPartnerApi\Model\ShipmentInvoicingV0\ShipmentItems'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'warehouseId' => null,
'amazonOrderId' => null,
'amazonShipmentId' => null,
'purchaseDate' => 'date-time',
'shippingAddress' => null,
'paymentMethodDetails' => null,
'marketplaceId' => null,
'sellerId' => null,
'buyerName' => null,
'buyerCounty' => null,
'buyerTaxInfo' => null,
'marketplaceTaxInfo' => null,
'sellerDisplayName' => null,
'shipmentItems' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'warehouseId' => 'WarehouseId',
'amazonOrderId' => 'AmazonOrderId',
'amazonShipmentId' => 'AmazonShipmentId',
'purchaseDate' => 'PurchaseDate',
'shippingAddress' => 'ShippingAddress',
'paymentMethodDetails' => 'PaymentMethodDetails',
'marketplaceId' => 'MarketplaceId',
'sellerId' => 'SellerId',
'buyerName' => 'BuyerName',
'buyerCounty' => 'BuyerCounty',
'buyerTaxInfo' => 'BuyerTaxInfo',
'marketplaceTaxInfo' => 'MarketplaceTaxInfo',
'sellerDisplayName' => 'SellerDisplayName',
'shipmentItems' => 'ShipmentItems'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'warehouseId' => 'setWarehouseId',
'amazonOrderId' => 'setAmazonOrderId',
'amazonShipmentId' => 'setAmazonShipmentId',
'purchaseDate' => 'setPurchaseDate',
'shippingAddress' => 'setShippingAddress',
'paymentMethodDetails' => 'setPaymentMethodDetails',
'marketplaceId' => 'setMarketplaceId',
'sellerId' => 'setSellerId',
'buyerName' => 'setBuyerName',
'buyerCounty' => 'setBuyerCounty',
'buyerTaxInfo' => 'setBuyerTaxInfo',
'marketplaceTaxInfo' => 'setMarketplaceTaxInfo',
'sellerDisplayName' => 'setSellerDisplayName',
'shipmentItems' => 'setShipmentItems'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'warehouseId' => 'getWarehouseId',
'amazonOrderId' => 'getAmazonOrderId',
'amazonShipmentId' => 'getAmazonShipmentId',
'purchaseDate' => 'getPurchaseDate',
'shippingAddress' => 'getShippingAddress',
'paymentMethodDetails' => 'getPaymentMethodDetails',
'marketplaceId' => 'getMarketplaceId',
'sellerId' => 'getSellerId',
'buyerName' => 'getBuyerName',
'buyerCounty' => 'getBuyerCounty',
'buyerTaxInfo' => 'getBuyerTaxInfo',
'marketplaceTaxInfo' => 'getMarketplaceTaxInfo',
'sellerDisplayName' => 'getSellerDisplayName',
'shipmentItems' => 'getShipmentItems'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['warehouseId'] = isset($data['warehouseId']) ? $data['warehouseId'] : null;
        $this->container['amazonOrderId'] = isset($data['amazonOrderId']) ? $data['amazonOrderId'] : null;
        $this->container['amazonShipmentId'] = isset($data['amazonShipmentId']) ? $data['amazonShipmentId'] : null;
        $this->container['purchaseDate'] = isset($data['purchaseDate']) ? $data['purchaseDate'] : null;
        $this->container['shippingAddress'] = isset($data['shippingAddress']) ? $data['shippingAddress'] : null;
        $this->container['paymentMethodDetails'] = isset($data['paymentMethodDetails']) ? $data['paymentMethodDetails'] : null;
        $this->container['marketplaceId'] = isset($data['marketplaceId']) ? $data['marketplaceId'] : null;
        $this->container['sellerId'] = isset($data['sellerId']) ? $data['sellerId'] : null;
        $this->container['buyerName'] = isset($data['buyerName']) ? $data['buyerName'] : null;
        $this->container['buyerCounty'] = isset($data['buyerCounty']) ? $data['buyerCounty'] : null;
        $this->container['buyerTaxInfo'] = isset($data['buyerTaxInfo']) ? $data['buyerTaxInfo'] : null;
        $this->container['marketplaceTaxInfo'] = isset($data['marketplaceTaxInfo']) ? $data['marketplaceTaxInfo'] : null;
        $this->container['sellerDisplayName'] = isset($data['sellerDisplayName']) ? $data['sellerDisplayName'] : null;
        $this->container['shipmentItems'] = isset($data['shipmentItems']) ? $data['shipmentItems'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets warehouseId
     *
     * @return string
     */
    public function getWarehouseId()
    {
        return $this->container['warehouseId'];
    }

    /**
     * Sets warehouseId
     *
     * @param string $warehouseId The Amazon-defined identifier for the warehouse.
     *
     * @return $this
     */
    public function setWarehouseId($warehouseId)
    {
        $this->container['warehouseId'] = $warehouseId;

        return $this;
    }

    /**
     * Gets amazonOrderId
     *
     * @return string
     */
    public function getAmazonOrderId()
    {
        return $this->container['amazonOrderId'];
    }

    /**
     * Sets amazonOrderId
     *
     * @param string $amazonOrderId The Amazon-defined identifier for the order.
     *
     * @return $this
     */
    public function setAmazonOrderId($amazonOrderId)
    {
        $this->container['amazonOrderId'] = $amazonOrderId;

        return $this;
    }

    /**
     * Gets amazonShipmentId
     *
     * @return string
     */
    public function getAmazonShipmentId()
    {
        return $this->container['amazonShipmentId'];
    }

    /**
     * Sets amazonShipmentId
     *
     * @param string $amazonShipmentId The Amazon-defined identifier for the shipment.
     *
     * @return $this
     */
    public function setAmazonShipmentId($amazonShipmentId)
    {
        $this->container['amazonShipmentId'] = $amazonShipmentId;

        return $this;
    }

    /**
     * Gets purchaseDate
     *
     * @return \DateTime
     */
    public function getPurchaseDate()
    {
        return $this->container['purchaseDate'];
    }

    /**
     * Sets purchaseDate
     *
     * @param \DateTime $purchaseDate The date and time when the order was created.
     *
     * @return $this
     */
    public function setPurchaseDate($purchaseDate)
    {
        $this->container['purchaseDate'] = $purchaseDate;

        return $this;
    }

    /**
     * Gets shippingAddress
     *
     * @return \SellingPartnerApi\Model\ShipmentInvoicingV0\Address
     */
    public function getShippingAddress()
    {
        return $this->container['shippingAddress'];
    }

    /**
     * Sets shippingAddress
     *
     * @param \SellingPartnerApi\Model\ShipmentInvoicingV0\Address $shippingAddress shippingAddress
     *
     * @return $this
     */
    public function setShippingAddress($shippingAddress)
    {
        $this->container['shippingAddress'] = $shippingAddress;

        return $this;
    }

    /**
     * Gets paymentMethodDetails
     *
     * @return \SellingPartnerApi\Model\ShipmentInvoicingV0\PaymentMethodDetailItemList
     */
    public function getPaymentMethodDetails()
    {
        return $this->container['paymentMethodDetails'];
    }

    /**
     * Sets paymentMethodDetails
     *
     * @param \SellingPartnerApi\Model\ShipmentInvoicingV0\PaymentMethodDetailItemList $paymentMethodDetails paymentMethodDetails
     *
     * @return $this
     */
    public function setPaymentMethodDetails($paymentMethodDetails)
    {
        $this->container['paymentMethodDetails'] = $paymentMethodDetails;

        return $this;
    }

    /**
     * Gets marketplaceId
     *
     * @return string
     */
    public function getMarketplaceId()
    {
        return $this->container['marketplaceId'];
    }

    /**
     * Sets marketplaceId
     *
     * @param string $marketplaceId The identifier for the marketplace where the order was placed.
     *
     * @return $this
     */
    public function setMarketplaceId($marketplaceId)
    {
        $this->container['marketplaceId'] = $marketplaceId;

        return $this;
    }

    /**
     * Gets sellerId
     *
     * @return string
     */
    public function getSellerId()
    {
        return $this->container['sellerId'];
    }

    /**
     * Sets sellerId
     *
     * @param string $sellerId The seller identifier.
     *
     * @return $this
     */
    public function setSellerId($sellerId)
    {
        $this->container['sellerId'] = $sellerId;

        return $this;
    }

    /**
     * Gets buyerName
     *
     * @return string
     */
    public function getBuyerName()
    {
        return $this->container['buyerName'];
    }

    /**
     * Sets buyerName
     *
     * @param string $buyerName The name of the buyer.
     *
     * @return $this
     */
    public function setBuyerName($buyerName)
    {
        $this->container['buyerName'] = $buyerName;

        return $this;
    }

    /**
     * Gets buyerCounty
     *
     * @return string
     */
    public function getBuyerCounty()
    {
        return $this->container['buyerCounty'];
    }

    /**
     * Sets buyerCounty
     *
     * @param string $buyerCounty The county of the buyer.
     *
     * @return $this
     */
    public function setBuyerCounty($buyerCounty)
    {
        $this->container['buyerCounty'] = $buyerCounty;

        return $this;
    }

    /**
     * Gets buyerTaxInfo
     *
     * @return \SellingPartnerApi\Model\ShipmentInvoicingV0\BuyerTaxInfo
     */
    public function getBuyerTaxInfo()
    {
        return $this->container['buyerTaxInfo'];
    }

    /**
     * Sets buyerTaxInfo
     *
     * @param \SellingPartnerApi\Model\ShipmentInvoicingV0\BuyerTaxInfo $buyerTaxInfo buyerTaxInfo
     *
     * @return $this
     */
    public function setBuyerTaxInfo($buyerTaxInfo)
    {
        $this->container['buyerTaxInfo'] = $buyerTaxInfo;

        return $this;
    }

    /**
     * Gets marketplaceTaxInfo
     *
     * @return \SellingPartnerApi\Model\ShipmentInvoicingV0\MarketplaceTaxInfo
     */
    public function getMarketplaceTaxInfo()
    {
        return $this->container['marketplaceTaxInfo'];
    }

    /**
     * Sets marketplaceTaxInfo
     *
     * @param \SellingPartnerApi\Model\ShipmentInvoicingV0\MarketplaceTaxInfo $marketplaceTaxInfo marketplaceTaxInfo
     *
     * @return $this
     */
    public function setMarketplaceTaxInfo($marketplaceTaxInfo)
    {
        $this->container['marketplaceTaxInfo'] = $marketplaceTaxInfo;

        return $this;
    }

    /**
     * Gets sellerDisplayName
     *
     * @return string
     */
    public function getSellerDisplayName()
    {
        return $this->container['sellerDisplayName'];
    }

    /**
     * Sets sellerDisplayName
     *
     * @param string $sellerDisplayName The sellerâ€™s friendly name registered in the marketplace.
     *
     * @return $this
     */
    public function setSellerDisplayName($sellerDisplayName)
    {
        $this->container['sellerDisplayName'] = $sellerDisplayName;

        return $this;
    }

    /**
     * Gets shipmentItems
     *
     * @return \SellingPartnerApi\Model\ShipmentInvoicingV0\ShipmentItems
     */
    public function getShipmentItems()
    {
        return $this->container['shipmentItems'];
    }

    /**
     * Sets shipmentItems
     *
     * @param \SellingPartnerApi\Model\ShipmentInvoicingV0\ShipmentItems $shipmentItems shipmentItems
     *
     * @return $this
     */
    public function setShipmentItems($shipmentItems)
    {
        $this->container['shipmentItems'] = $shipmentItems;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange] 
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange] 
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
