<?php
/**
 * FinancialEvents
 *
 * PHP version 5
 *
 * @category Class
 * @package  SellingPartnerApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.36
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace SellingPartnerApi\Model\FinancesV0;

use \ArrayAccess;
use \SellingPartnerApi\ObjectSerializer;

/**
 * FinancialEvents Class Doc Comment
 *
 * @category Class
 * @description Contains all information related to a financial event.
 * @package  SellingPartnerApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FinancialEvents implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FinancialEvents';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'shipmentEventList' => '\SellingPartnerApi\Model\FinancesV0\ShipmentEventList',
'shipmentSettleEventList' => '\SellingPartnerApi\Model\FinancesV0\ShipmentSettleEventList',
'refundEventList' => '\SellingPartnerApi\Model\FinancesV0\ShipmentEventList',
'guaranteeClaimEventList' => '\SellingPartnerApi\Model\FinancesV0\ShipmentEventList',
'chargebackEventList' => '\SellingPartnerApi\Model\FinancesV0\ShipmentEventList',
'payWithAmazonEventList' => '\SellingPartnerApi\Model\FinancesV0\PayWithAmazonEventList',
'serviceProviderCreditEventList' => '\SellingPartnerApi\Model\FinancesV0\SolutionProviderCreditEventList',
'retrochargeEventList' => '\SellingPartnerApi\Model\FinancesV0\RetrochargeEventList',
'rentalTransactionEventList' => '\SellingPartnerApi\Model\FinancesV0\RentalTransactionEventList',
'productAdsPaymentEventList' => '\SellingPartnerApi\Model\FinancesV0\ProductAdsPaymentEventList',
'serviceFeeEventList' => '\SellingPartnerApi\Model\FinancesV0\ServiceFeeEventList',
'sellerDealPaymentEventList' => '\SellingPartnerApi\Model\FinancesV0\SellerDealPaymentEventList',
'debtRecoveryEventList' => '\SellingPartnerApi\Model\FinancesV0\DebtRecoveryEventList',
'loanServicingEventList' => '\SellingPartnerApi\Model\FinancesV0\LoanServicingEventList',
'adjustmentEventList' => '\SellingPartnerApi\Model\FinancesV0\AdjustmentEventList',
'sAFETReimbursementEventList' => '\SellingPartnerApi\Model\FinancesV0\SAFETReimbursementEventList',
'sellerReviewEnrollmentPaymentEventList' => '\SellingPartnerApi\Model\FinancesV0\SellerReviewEnrollmentPaymentEventList',
'fBALiquidationEventList' => '\SellingPartnerApi\Model\FinancesV0\FBALiquidationEventList',
'couponPaymentEventList' => '\SellingPartnerApi\Model\FinancesV0\CouponPaymentEventList',
'imagingServicesFeeEventList' => '\SellingPartnerApi\Model\FinancesV0\ImagingServicesFeeEventList',
'networkComminglingTransactionEventList' => '\SellingPartnerApi\Model\FinancesV0\NetworkComminglingTransactionEventList',
'affordabilityExpenseEventList' => '\SellingPartnerApi\Model\FinancesV0\AffordabilityExpenseEventList',
'affordabilityExpenseReversalEventList' => '\SellingPartnerApi\Model\FinancesV0\AffordabilityExpenseEventList',
'removalShipmentEventList' => '\SellingPartnerApi\Model\FinancesV0\RemovalShipmentEventList',
'removalShipmentAdjustmentEventList' => '\SellingPartnerApi\Model\FinancesV0\RemovalShipmentAdjustmentEventList',
'trialShipmentEventList' => '\SellingPartnerApi\Model\FinancesV0\TrialShipmentEventList',
'tDSReimbursementEventList' => '\SellingPartnerApi\Model\FinancesV0\TDSReimbursementEventList',
'adhocDisbursementEventList' => '\SellingPartnerApi\Model\FinancesV0\AdhocDisbursementEventList',
'taxWithholdingEventList' => '\SellingPartnerApi\Model\FinancesV0\TaxWithholdingEventList',
'chargeRefundEventList' => '\SellingPartnerApi\Model\FinancesV0\ChargeRefundEventList',
'failedAdhocDisbursementEventList' => '\SellingPartnerApi\Model\FinancesV0\FailedAdhocDisbursementEventList',
'valueAddedServiceChargeEventList' => '\SellingPartnerApi\Model\FinancesV0\ValueAddedServiceChargeEventList',
'capacityReservationBillingEventList' => '\SellingPartnerApi\Model\FinancesV0\CapacityReservationBillingEventList'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'shipmentEventList' => null,
'shipmentSettleEventList' => null,
'refundEventList' => null,
'guaranteeClaimEventList' => null,
'chargebackEventList' => null,
'payWithAmazonEventList' => null,
'serviceProviderCreditEventList' => null,
'retrochargeEventList' => null,
'rentalTransactionEventList' => null,
'productAdsPaymentEventList' => null,
'serviceFeeEventList' => null,
'sellerDealPaymentEventList' => null,
'debtRecoveryEventList' => null,
'loanServicingEventList' => null,
'adjustmentEventList' => null,
'sAFETReimbursementEventList' => null,
'sellerReviewEnrollmentPaymentEventList' => null,
'fBALiquidationEventList' => null,
'couponPaymentEventList' => null,
'imagingServicesFeeEventList' => null,
'networkComminglingTransactionEventList' => null,
'affordabilityExpenseEventList' => null,
'affordabilityExpenseReversalEventList' => null,
'removalShipmentEventList' => null,
'removalShipmentAdjustmentEventList' => null,
'trialShipmentEventList' => null,
'tDSReimbursementEventList' => null,
'adhocDisbursementEventList' => null,
'taxWithholdingEventList' => null,
'chargeRefundEventList' => null,
'failedAdhocDisbursementEventList' => null,
'valueAddedServiceChargeEventList' => null,
'capacityReservationBillingEventList' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'shipmentEventList' => 'ShipmentEventList',
'shipmentSettleEventList' => 'ShipmentSettleEventList',
'refundEventList' => 'RefundEventList',
'guaranteeClaimEventList' => 'GuaranteeClaimEventList',
'chargebackEventList' => 'ChargebackEventList',
'payWithAmazonEventList' => 'PayWithAmazonEventList',
'serviceProviderCreditEventList' => 'ServiceProviderCreditEventList',
'retrochargeEventList' => 'RetrochargeEventList',
'rentalTransactionEventList' => 'RentalTransactionEventList',
'productAdsPaymentEventList' => 'ProductAdsPaymentEventList',
'serviceFeeEventList' => 'ServiceFeeEventList',
'sellerDealPaymentEventList' => 'SellerDealPaymentEventList',
'debtRecoveryEventList' => 'DebtRecoveryEventList',
'loanServicingEventList' => 'LoanServicingEventList',
'adjustmentEventList' => 'AdjustmentEventList',
'sAFETReimbursementEventList' => 'SAFETReimbursementEventList',
'sellerReviewEnrollmentPaymentEventList' => 'SellerReviewEnrollmentPaymentEventList',
'fBALiquidationEventList' => 'FBALiquidationEventList',
'couponPaymentEventList' => 'CouponPaymentEventList',
'imagingServicesFeeEventList' => 'ImagingServicesFeeEventList',
'networkComminglingTransactionEventList' => 'NetworkComminglingTransactionEventList',
'affordabilityExpenseEventList' => 'AffordabilityExpenseEventList',
'affordabilityExpenseReversalEventList' => 'AffordabilityExpenseReversalEventList',
'removalShipmentEventList' => 'RemovalShipmentEventList',
'removalShipmentAdjustmentEventList' => 'RemovalShipmentAdjustmentEventList',
'trialShipmentEventList' => 'TrialShipmentEventList',
'tDSReimbursementEventList' => 'TDSReimbursementEventList',
'adhocDisbursementEventList' => 'AdhocDisbursementEventList',
'taxWithholdingEventList' => 'TaxWithholdingEventList',
'chargeRefundEventList' => 'ChargeRefundEventList',
'failedAdhocDisbursementEventList' => 'FailedAdhocDisbursementEventList',
'valueAddedServiceChargeEventList' => 'ValueAddedServiceChargeEventList',
'capacityReservationBillingEventList' => 'CapacityReservationBillingEventList'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'shipmentEventList' => 'setShipmentEventList',
'shipmentSettleEventList' => 'setShipmentSettleEventList',
'refundEventList' => 'setRefundEventList',
'guaranteeClaimEventList' => 'setGuaranteeClaimEventList',
'chargebackEventList' => 'setChargebackEventList',
'payWithAmazonEventList' => 'setPayWithAmazonEventList',
'serviceProviderCreditEventList' => 'setServiceProviderCreditEventList',
'retrochargeEventList' => 'setRetrochargeEventList',
'rentalTransactionEventList' => 'setRentalTransactionEventList',
'productAdsPaymentEventList' => 'setProductAdsPaymentEventList',
'serviceFeeEventList' => 'setServiceFeeEventList',
'sellerDealPaymentEventList' => 'setSellerDealPaymentEventList',
'debtRecoveryEventList' => 'setDebtRecoveryEventList',
'loanServicingEventList' => 'setLoanServicingEventList',
'adjustmentEventList' => 'setAdjustmentEventList',
'sAFETReimbursementEventList' => 'setSAFETReimbursementEventList',
'sellerReviewEnrollmentPaymentEventList' => 'setSellerReviewEnrollmentPaymentEventList',
'fBALiquidationEventList' => 'setFBALiquidationEventList',
'couponPaymentEventList' => 'setCouponPaymentEventList',
'imagingServicesFeeEventList' => 'setImagingServicesFeeEventList',
'networkComminglingTransactionEventList' => 'setNetworkComminglingTransactionEventList',
'affordabilityExpenseEventList' => 'setAffordabilityExpenseEventList',
'affordabilityExpenseReversalEventList' => 'setAffordabilityExpenseReversalEventList',
'removalShipmentEventList' => 'setRemovalShipmentEventList',
'removalShipmentAdjustmentEventList' => 'setRemovalShipmentAdjustmentEventList',
'trialShipmentEventList' => 'setTrialShipmentEventList',
'tDSReimbursementEventList' => 'setTDSReimbursementEventList',
'adhocDisbursementEventList' => 'setAdhocDisbursementEventList',
'taxWithholdingEventList' => 'setTaxWithholdingEventList',
'chargeRefundEventList' => 'setChargeRefundEventList',
'failedAdhocDisbursementEventList' => 'setFailedAdhocDisbursementEventList',
'valueAddedServiceChargeEventList' => 'setValueAddedServiceChargeEventList',
'capacityReservationBillingEventList' => 'setCapacityReservationBillingEventList'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'shipmentEventList' => 'getShipmentEventList',
'shipmentSettleEventList' => 'getShipmentSettleEventList',
'refundEventList' => 'getRefundEventList',
'guaranteeClaimEventList' => 'getGuaranteeClaimEventList',
'chargebackEventList' => 'getChargebackEventList',
'payWithAmazonEventList' => 'getPayWithAmazonEventList',
'serviceProviderCreditEventList' => 'getServiceProviderCreditEventList',
'retrochargeEventList' => 'getRetrochargeEventList',
'rentalTransactionEventList' => 'getRentalTransactionEventList',
'productAdsPaymentEventList' => 'getProductAdsPaymentEventList',
'serviceFeeEventList' => 'getServiceFeeEventList',
'sellerDealPaymentEventList' => 'getSellerDealPaymentEventList',
'debtRecoveryEventList' => 'getDebtRecoveryEventList',
'loanServicingEventList' => 'getLoanServicingEventList',
'adjustmentEventList' => 'getAdjustmentEventList',
'sAFETReimbursementEventList' => 'getSAFETReimbursementEventList',
'sellerReviewEnrollmentPaymentEventList' => 'getSellerReviewEnrollmentPaymentEventList',
'fBALiquidationEventList' => 'getFBALiquidationEventList',
'couponPaymentEventList' => 'getCouponPaymentEventList',
'imagingServicesFeeEventList' => 'getImagingServicesFeeEventList',
'networkComminglingTransactionEventList' => 'getNetworkComminglingTransactionEventList',
'affordabilityExpenseEventList' => 'getAffordabilityExpenseEventList',
'affordabilityExpenseReversalEventList' => 'getAffordabilityExpenseReversalEventList',
'removalShipmentEventList' => 'getRemovalShipmentEventList',
'removalShipmentAdjustmentEventList' => 'getRemovalShipmentAdjustmentEventList',
'trialShipmentEventList' => 'getTrialShipmentEventList',
'tDSReimbursementEventList' => 'getTDSReimbursementEventList',
'adhocDisbursementEventList' => 'getAdhocDisbursementEventList',
'taxWithholdingEventList' => 'getTaxWithholdingEventList',
'chargeRefundEventList' => 'getChargeRefundEventList',
'failedAdhocDisbursementEventList' => 'getFailedAdhocDisbursementEventList',
'valueAddedServiceChargeEventList' => 'getValueAddedServiceChargeEventList',
'capacityReservationBillingEventList' => 'getCapacityReservationBillingEventList'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['shipmentEventList'] = isset($data['shipmentEventList']) ? $data['shipmentEventList'] : null;
        $this->container['shipmentSettleEventList'] = isset($data['shipmentSettleEventList']) ? $data['shipmentSettleEventList'] : null;
        $this->container['refundEventList'] = isset($data['refundEventList']) ? $data['refundEventList'] : null;
        $this->container['guaranteeClaimEventList'] = isset($data['guaranteeClaimEventList']) ? $data['guaranteeClaimEventList'] : null;
        $this->container['chargebackEventList'] = isset($data['chargebackEventList']) ? $data['chargebackEventList'] : null;
        $this->container['payWithAmazonEventList'] = isset($data['payWithAmazonEventList']) ? $data['payWithAmazonEventList'] : null;
        $this->container['serviceProviderCreditEventList'] = isset($data['serviceProviderCreditEventList']) ? $data['serviceProviderCreditEventList'] : null;
        $this->container['retrochargeEventList'] = isset($data['retrochargeEventList']) ? $data['retrochargeEventList'] : null;
        $this->container['rentalTransactionEventList'] = isset($data['rentalTransactionEventList']) ? $data['rentalTransactionEventList'] : null;
        $this->container['productAdsPaymentEventList'] = isset($data['productAdsPaymentEventList']) ? $data['productAdsPaymentEventList'] : null;
        $this->container['serviceFeeEventList'] = isset($data['serviceFeeEventList']) ? $data['serviceFeeEventList'] : null;
        $this->container['sellerDealPaymentEventList'] = isset($data['sellerDealPaymentEventList']) ? $data['sellerDealPaymentEventList'] : null;
        $this->container['debtRecoveryEventList'] = isset($data['debtRecoveryEventList']) ? $data['debtRecoveryEventList'] : null;
        $this->container['loanServicingEventList'] = isset($data['loanServicingEventList']) ? $data['loanServicingEventList'] : null;
        $this->container['adjustmentEventList'] = isset($data['adjustmentEventList']) ? $data['adjustmentEventList'] : null;
        $this->container['sAFETReimbursementEventList'] = isset($data['sAFETReimbursementEventList']) ? $data['sAFETReimbursementEventList'] : null;
        $this->container['sellerReviewEnrollmentPaymentEventList'] = isset($data['sellerReviewEnrollmentPaymentEventList']) ? $data['sellerReviewEnrollmentPaymentEventList'] : null;
        $this->container['fBALiquidationEventList'] = isset($data['fBALiquidationEventList']) ? $data['fBALiquidationEventList'] : null;
        $this->container['couponPaymentEventList'] = isset($data['couponPaymentEventList']) ? $data['couponPaymentEventList'] : null;
        $this->container['imagingServicesFeeEventList'] = isset($data['imagingServicesFeeEventList']) ? $data['imagingServicesFeeEventList'] : null;
        $this->container['networkComminglingTransactionEventList'] = isset($data['networkComminglingTransactionEventList']) ? $data['networkComminglingTransactionEventList'] : null;
        $this->container['affordabilityExpenseEventList'] = isset($data['affordabilityExpenseEventList']) ? $data['affordabilityExpenseEventList'] : null;
        $this->container['affordabilityExpenseReversalEventList'] = isset($data['affordabilityExpenseReversalEventList']) ? $data['affordabilityExpenseReversalEventList'] : null;
        $this->container['removalShipmentEventList'] = isset($data['removalShipmentEventList']) ? $data['removalShipmentEventList'] : null;
        $this->container['removalShipmentAdjustmentEventList'] = isset($data['removalShipmentAdjustmentEventList']) ? $data['removalShipmentAdjustmentEventList'] : null;
        $this->container['trialShipmentEventList'] = isset($data['trialShipmentEventList']) ? $data['trialShipmentEventList'] : null;
        $this->container['tDSReimbursementEventList'] = isset($data['tDSReimbursementEventList']) ? $data['tDSReimbursementEventList'] : null;
        $this->container['adhocDisbursementEventList'] = isset($data['adhocDisbursementEventList']) ? $data['adhocDisbursementEventList'] : null;
        $this->container['taxWithholdingEventList'] = isset($data['taxWithholdingEventList']) ? $data['taxWithholdingEventList'] : null;
        $this->container['chargeRefundEventList'] = isset($data['chargeRefundEventList']) ? $data['chargeRefundEventList'] : null;
        $this->container['failedAdhocDisbursementEventList'] = isset($data['failedAdhocDisbursementEventList']) ? $data['failedAdhocDisbursementEventList'] : null;
        $this->container['valueAddedServiceChargeEventList'] = isset($data['valueAddedServiceChargeEventList']) ? $data['valueAddedServiceChargeEventList'] : null;
        $this->container['capacityReservationBillingEventList'] = isset($data['capacityReservationBillingEventList']) ? $data['capacityReservationBillingEventList'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets shipmentEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\ShipmentEventList
     */
    public function getShipmentEventList()
    {
        return $this->container['shipmentEventList'];
    }

    /**
     * Sets shipmentEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\ShipmentEventList $shipmentEventList shipmentEventList
     *
     * @return $this
     */
    public function setShipmentEventList($shipmentEventList)
    {
        $this->container['shipmentEventList'] = $shipmentEventList;

        return $this;
    }

    /**
     * Gets shipmentSettleEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\ShipmentSettleEventList
     */
    public function getShipmentSettleEventList()
    {
        return $this->container['shipmentSettleEventList'];
    }

    /**
     * Sets shipmentSettleEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\ShipmentSettleEventList $shipmentSettleEventList shipmentSettleEventList
     *
     * @return $this
     */
    public function setShipmentSettleEventList($shipmentSettleEventList)
    {
        $this->container['shipmentSettleEventList'] = $shipmentSettleEventList;

        return $this;
    }

    /**
     * Gets refundEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\ShipmentEventList
     */
    public function getRefundEventList()
    {
        return $this->container['refundEventList'];
    }

    /**
     * Sets refundEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\ShipmentEventList $refundEventList refundEventList
     *
     * @return $this
     */
    public function setRefundEventList($refundEventList)
    {
        $this->container['refundEventList'] = $refundEventList;

        return $this;
    }

    /**
     * Gets guaranteeClaimEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\ShipmentEventList
     */
    public function getGuaranteeClaimEventList()
    {
        return $this->container['guaranteeClaimEventList'];
    }

    /**
     * Sets guaranteeClaimEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\ShipmentEventList $guaranteeClaimEventList guaranteeClaimEventList
     *
     * @return $this
     */
    public function setGuaranteeClaimEventList($guaranteeClaimEventList)
    {
        $this->container['guaranteeClaimEventList'] = $guaranteeClaimEventList;

        return $this;
    }

    /**
     * Gets chargebackEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\ShipmentEventList
     */
    public function getChargebackEventList()
    {
        return $this->container['chargebackEventList'];
    }

    /**
     * Sets chargebackEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\ShipmentEventList $chargebackEventList chargebackEventList
     *
     * @return $this
     */
    public function setChargebackEventList($chargebackEventList)
    {
        $this->container['chargebackEventList'] = $chargebackEventList;

        return $this;
    }

    /**
     * Gets payWithAmazonEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\PayWithAmazonEventList
     */
    public function getPayWithAmazonEventList()
    {
        return $this->container['payWithAmazonEventList'];
    }

    /**
     * Sets payWithAmazonEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\PayWithAmazonEventList $payWithAmazonEventList payWithAmazonEventList
     *
     * @return $this
     */
    public function setPayWithAmazonEventList($payWithAmazonEventList)
    {
        $this->container['payWithAmazonEventList'] = $payWithAmazonEventList;

        return $this;
    }

    /**
     * Gets serviceProviderCreditEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\SolutionProviderCreditEventList
     */
    public function getServiceProviderCreditEventList()
    {
        return $this->container['serviceProviderCreditEventList'];
    }

    /**
     * Sets serviceProviderCreditEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\SolutionProviderCreditEventList $serviceProviderCreditEventList serviceProviderCreditEventList
     *
     * @return $this
     */
    public function setServiceProviderCreditEventList($serviceProviderCreditEventList)
    {
        $this->container['serviceProviderCreditEventList'] = $serviceProviderCreditEventList;

        return $this;
    }

    /**
     * Gets retrochargeEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\RetrochargeEventList
     */
    public function getRetrochargeEventList()
    {
        return $this->container['retrochargeEventList'];
    }

    /**
     * Sets retrochargeEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\RetrochargeEventList $retrochargeEventList retrochargeEventList
     *
     * @return $this
     */
    public function setRetrochargeEventList($retrochargeEventList)
    {
        $this->container['retrochargeEventList'] = $retrochargeEventList;

        return $this;
    }

    /**
     * Gets rentalTransactionEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\RentalTransactionEventList
     */
    public function getRentalTransactionEventList()
    {
        return $this->container['rentalTransactionEventList'];
    }

    /**
     * Sets rentalTransactionEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\RentalTransactionEventList $rentalTransactionEventList rentalTransactionEventList
     *
     * @return $this
     */
    public function setRentalTransactionEventList($rentalTransactionEventList)
    {
        $this->container['rentalTransactionEventList'] = $rentalTransactionEventList;

        return $this;
    }

    /**
     * Gets productAdsPaymentEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\ProductAdsPaymentEventList
     */
    public function getProductAdsPaymentEventList()
    {
        return $this->container['productAdsPaymentEventList'];
    }

    /**
     * Sets productAdsPaymentEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\ProductAdsPaymentEventList $productAdsPaymentEventList productAdsPaymentEventList
     *
     * @return $this
     */
    public function setProductAdsPaymentEventList($productAdsPaymentEventList)
    {
        $this->container['productAdsPaymentEventList'] = $productAdsPaymentEventList;

        return $this;
    }

    /**
     * Gets serviceFeeEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\ServiceFeeEventList
     */
    public function getServiceFeeEventList()
    {
        return $this->container['serviceFeeEventList'];
    }

    /**
     * Sets serviceFeeEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\ServiceFeeEventList $serviceFeeEventList serviceFeeEventList
     *
     * @return $this
     */
    public function setServiceFeeEventList($serviceFeeEventList)
    {
        $this->container['serviceFeeEventList'] = $serviceFeeEventList;

        return $this;
    }

    /**
     * Gets sellerDealPaymentEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\SellerDealPaymentEventList
     */
    public function getSellerDealPaymentEventList()
    {
        return $this->container['sellerDealPaymentEventList'];
    }

    /**
     * Sets sellerDealPaymentEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\SellerDealPaymentEventList $sellerDealPaymentEventList sellerDealPaymentEventList
     *
     * @return $this
     */
    public function setSellerDealPaymentEventList($sellerDealPaymentEventList)
    {
        $this->container['sellerDealPaymentEventList'] = $sellerDealPaymentEventList;

        return $this;
    }

    /**
     * Gets debtRecoveryEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\DebtRecoveryEventList
     */
    public function getDebtRecoveryEventList()
    {
        return $this->container['debtRecoveryEventList'];
    }

    /**
     * Sets debtRecoveryEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\DebtRecoveryEventList $debtRecoveryEventList debtRecoveryEventList
     *
     * @return $this
     */
    public function setDebtRecoveryEventList($debtRecoveryEventList)
    {
        $this->container['debtRecoveryEventList'] = $debtRecoveryEventList;

        return $this;
    }

    /**
     * Gets loanServicingEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\LoanServicingEventList
     */
    public function getLoanServicingEventList()
    {
        return $this->container['loanServicingEventList'];
    }

    /**
     * Sets loanServicingEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\LoanServicingEventList $loanServicingEventList loanServicingEventList
     *
     * @return $this
     */
    public function setLoanServicingEventList($loanServicingEventList)
    {
        $this->container['loanServicingEventList'] = $loanServicingEventList;

        return $this;
    }

    /**
     * Gets adjustmentEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\AdjustmentEventList
     */
    public function getAdjustmentEventList()
    {
        return $this->container['adjustmentEventList'];
    }

    /**
     * Sets adjustmentEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\AdjustmentEventList $adjustmentEventList adjustmentEventList
     *
     * @return $this
     */
    public function setAdjustmentEventList($adjustmentEventList)
    {
        $this->container['adjustmentEventList'] = $adjustmentEventList;

        return $this;
    }

    /**
     * Gets sAFETReimbursementEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\SAFETReimbursementEventList
     */
    public function getSAFETReimbursementEventList()
    {
        return $this->container['sAFETReimbursementEventList'];
    }

    /**
     * Sets sAFETReimbursementEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\SAFETReimbursementEventList $sAFETReimbursementEventList sAFETReimbursementEventList
     *
     * @return $this
     */
    public function setSAFETReimbursementEventList($sAFETReimbursementEventList)
    {
        $this->container['sAFETReimbursementEventList'] = $sAFETReimbursementEventList;

        return $this;
    }

    /**
     * Gets sellerReviewEnrollmentPaymentEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\SellerReviewEnrollmentPaymentEventList
     */
    public function getSellerReviewEnrollmentPaymentEventList()
    {
        return $this->container['sellerReviewEnrollmentPaymentEventList'];
    }

    /**
     * Sets sellerReviewEnrollmentPaymentEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\SellerReviewEnrollmentPaymentEventList $sellerReviewEnrollmentPaymentEventList sellerReviewEnrollmentPaymentEventList
     *
     * @return $this
     */
    public function setSellerReviewEnrollmentPaymentEventList($sellerReviewEnrollmentPaymentEventList)
    {
        $this->container['sellerReviewEnrollmentPaymentEventList'] = $sellerReviewEnrollmentPaymentEventList;

        return $this;
    }

    /**
     * Gets fBALiquidationEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\FBALiquidationEventList
     */
    public function getFBALiquidationEventList()
    {
        return $this->container['fBALiquidationEventList'];
    }

    /**
     * Sets fBALiquidationEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\FBALiquidationEventList $fBALiquidationEventList fBALiquidationEventList
     *
     * @return $this
     */
    public function setFBALiquidationEventList($fBALiquidationEventList)
    {
        $this->container['fBALiquidationEventList'] = $fBALiquidationEventList;

        return $this;
    }

    /**
     * Gets couponPaymentEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\CouponPaymentEventList
     */
    public function getCouponPaymentEventList()
    {
        return $this->container['couponPaymentEventList'];
    }

    /**
     * Sets couponPaymentEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\CouponPaymentEventList $couponPaymentEventList couponPaymentEventList
     *
     * @return $this
     */
    public function setCouponPaymentEventList($couponPaymentEventList)
    {
        $this->container['couponPaymentEventList'] = $couponPaymentEventList;

        return $this;
    }

    /**
     * Gets imagingServicesFeeEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\ImagingServicesFeeEventList
     */
    public function getImagingServicesFeeEventList()
    {
        return $this->container['imagingServicesFeeEventList'];
    }

    /**
     * Sets imagingServicesFeeEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\ImagingServicesFeeEventList $imagingServicesFeeEventList imagingServicesFeeEventList
     *
     * @return $this
     */
    public function setImagingServicesFeeEventList($imagingServicesFeeEventList)
    {
        $this->container['imagingServicesFeeEventList'] = $imagingServicesFeeEventList;

        return $this;
    }

    /**
     * Gets networkComminglingTransactionEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\NetworkComminglingTransactionEventList
     */
    public function getNetworkComminglingTransactionEventList()
    {
        return $this->container['networkComminglingTransactionEventList'];
    }

    /**
     * Sets networkComminglingTransactionEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\NetworkComminglingTransactionEventList $networkComminglingTransactionEventList networkComminglingTransactionEventList
     *
     * @return $this
     */
    public function setNetworkComminglingTransactionEventList($networkComminglingTransactionEventList)
    {
        $this->container['networkComminglingTransactionEventList'] = $networkComminglingTransactionEventList;

        return $this;
    }

    /**
     * Gets affordabilityExpenseEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\AffordabilityExpenseEventList
     */
    public function getAffordabilityExpenseEventList()
    {
        return $this->container['affordabilityExpenseEventList'];
    }

    /**
     * Sets affordabilityExpenseEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\AffordabilityExpenseEventList $affordabilityExpenseEventList affordabilityExpenseEventList
     *
     * @return $this
     */
    public function setAffordabilityExpenseEventList($affordabilityExpenseEventList)
    {
        $this->container['affordabilityExpenseEventList'] = $affordabilityExpenseEventList;

        return $this;
    }

    /**
     * Gets affordabilityExpenseReversalEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\AffordabilityExpenseEventList
     */
    public function getAffordabilityExpenseReversalEventList()
    {
        return $this->container['affordabilityExpenseReversalEventList'];
    }

    /**
     * Sets affordabilityExpenseReversalEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\AffordabilityExpenseEventList $affordabilityExpenseReversalEventList affordabilityExpenseReversalEventList
     *
     * @return $this
     */
    public function setAffordabilityExpenseReversalEventList($affordabilityExpenseReversalEventList)
    {
        $this->container['affordabilityExpenseReversalEventList'] = $affordabilityExpenseReversalEventList;

        return $this;
    }

    /**
     * Gets removalShipmentEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\RemovalShipmentEventList
     */
    public function getRemovalShipmentEventList()
    {
        return $this->container['removalShipmentEventList'];
    }

    /**
     * Sets removalShipmentEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\RemovalShipmentEventList $removalShipmentEventList removalShipmentEventList
     *
     * @return $this
     */
    public function setRemovalShipmentEventList($removalShipmentEventList)
    {
        $this->container['removalShipmentEventList'] = $removalShipmentEventList;

        return $this;
    }

    /**
     * Gets removalShipmentAdjustmentEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\RemovalShipmentAdjustmentEventList
     */
    public function getRemovalShipmentAdjustmentEventList()
    {
        return $this->container['removalShipmentAdjustmentEventList'];
    }

    /**
     * Sets removalShipmentAdjustmentEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\RemovalShipmentAdjustmentEventList $removalShipmentAdjustmentEventList removalShipmentAdjustmentEventList
     *
     * @return $this
     */
    public function setRemovalShipmentAdjustmentEventList($removalShipmentAdjustmentEventList)
    {
        $this->container['removalShipmentAdjustmentEventList'] = $removalShipmentAdjustmentEventList;

        return $this;
    }

    /**
     * Gets trialShipmentEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\TrialShipmentEventList
     */
    public function getTrialShipmentEventList()
    {
        return $this->container['trialShipmentEventList'];
    }

    /**
     * Sets trialShipmentEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\TrialShipmentEventList $trialShipmentEventList trialShipmentEventList
     *
     * @return $this
     */
    public function setTrialShipmentEventList($trialShipmentEventList)
    {
        $this->container['trialShipmentEventList'] = $trialShipmentEventList;

        return $this;
    }

    /**
     * Gets tDSReimbursementEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\TDSReimbursementEventList
     */
    public function getTDSReimbursementEventList()
    {
        return $this->container['tDSReimbursementEventList'];
    }

    /**
     * Sets tDSReimbursementEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\TDSReimbursementEventList $tDSReimbursementEventList tDSReimbursementEventList
     *
     * @return $this
     */
    public function setTDSReimbursementEventList($tDSReimbursementEventList)
    {
        $this->container['tDSReimbursementEventList'] = $tDSReimbursementEventList;

        return $this;
    }

    /**
     * Gets adhocDisbursementEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\AdhocDisbursementEventList
     */
    public function getAdhocDisbursementEventList()
    {
        return $this->container['adhocDisbursementEventList'];
    }

    /**
     * Sets adhocDisbursementEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\AdhocDisbursementEventList $adhocDisbursementEventList adhocDisbursementEventList
     *
     * @return $this
     */
    public function setAdhocDisbursementEventList($adhocDisbursementEventList)
    {
        $this->container['adhocDisbursementEventList'] = $adhocDisbursementEventList;

        return $this;
    }

    /**
     * Gets taxWithholdingEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\TaxWithholdingEventList
     */
    public function getTaxWithholdingEventList()
    {
        return $this->container['taxWithholdingEventList'];
    }

    /**
     * Sets taxWithholdingEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\TaxWithholdingEventList $taxWithholdingEventList taxWithholdingEventList
     *
     * @return $this
     */
    public function setTaxWithholdingEventList($taxWithholdingEventList)
    {
        $this->container['taxWithholdingEventList'] = $taxWithholdingEventList;

        return $this;
    }

    /**
     * Gets chargeRefundEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\ChargeRefundEventList
     */
    public function getChargeRefundEventList()
    {
        return $this->container['chargeRefundEventList'];
    }

    /**
     * Sets chargeRefundEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\ChargeRefundEventList $chargeRefundEventList chargeRefundEventList
     *
     * @return $this
     */
    public function setChargeRefundEventList($chargeRefundEventList)
    {
        $this->container['chargeRefundEventList'] = $chargeRefundEventList;

        return $this;
    }

    /**
     * Gets failedAdhocDisbursementEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\FailedAdhocDisbursementEventList
     */
    public function getFailedAdhocDisbursementEventList()
    {
        return $this->container['failedAdhocDisbursementEventList'];
    }

    /**
     * Sets failedAdhocDisbursementEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\FailedAdhocDisbursementEventList $failedAdhocDisbursementEventList failedAdhocDisbursementEventList
     *
     * @return $this
     */
    public function setFailedAdhocDisbursementEventList($failedAdhocDisbursementEventList)
    {
        $this->container['failedAdhocDisbursementEventList'] = $failedAdhocDisbursementEventList;

        return $this;
    }

    /**
     * Gets valueAddedServiceChargeEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\ValueAddedServiceChargeEventList
     */
    public function getValueAddedServiceChargeEventList()
    {
        return $this->container['valueAddedServiceChargeEventList'];
    }

    /**
     * Sets valueAddedServiceChargeEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\ValueAddedServiceChargeEventList $valueAddedServiceChargeEventList valueAddedServiceChargeEventList
     *
     * @return $this
     */
    public function setValueAddedServiceChargeEventList($valueAddedServiceChargeEventList)
    {
        $this->container['valueAddedServiceChargeEventList'] = $valueAddedServiceChargeEventList;

        return $this;
    }

    /**
     * Gets capacityReservationBillingEventList
     *
     * @return \SellingPartnerApi\Model\FinancesV0\CapacityReservationBillingEventList
     */
    public function getCapacityReservationBillingEventList()
    {
        return $this->container['capacityReservationBillingEventList'];
    }

    /**
     * Sets capacityReservationBillingEventList
     *
     * @param \SellingPartnerApi\Model\FinancesV0\CapacityReservationBillingEventList $capacityReservationBillingEventList capacityReservationBillingEventList
     *
     * @return $this
     */
    public function setCapacityReservationBillingEventList($capacityReservationBillingEventList)
    {
        $this->container['capacityReservationBillingEventList'] = $capacityReservationBillingEventList;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange] 
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange] 
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
